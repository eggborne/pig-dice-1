:root {
  --header-height: 4rem;
  --game-board-size: 80vmin;
  /* --player-knob-size: 24vmin; */
  --player-knob-size: calc(var(--game-board-size) * 0.325);
  --die-size: calc(var(--game-board-size) * 0.2);
  --die-dot-size: calc(var(--die-size) * 0.225);
  --game-board-rotation: 90;
}

*, * *, * * * {
  margin: 0;
  box-sizing: border-box;
}

body {
  width: 100vw;
  font-family: sans-serif;
  background-color: rgb(32, 32, 32);
  color: white;
}

h1 {
  font-size: 2rem;
}

header {
  background-color: rgb(0, 0, 0);
  color: #aaa;
  height: var(--header-height);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 2rem;
}

main {
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: var(--header-height);
}

#new-game-button {
  opacity: 0;
}

#new-game-button, #add-player-button, #confirm-game-button, .modal > button {
  position: absolute;
  padding: 2vmin;
  border-radius: 1rem;
  font-size: 2vmin;
}

#add-player-button, #confirm-game-button {
  position: relative;
}

#add-player-button {
  width: 50%;
  align-self: center;
}

#confirm-game-button {
  background-color: rgb(139, 212, 139);
  height: 10vmin;
}

#game-area {
  position: relative;
  /* background-color: rgb(35, 50, 35); */
  width: var(--game-board-size);
  height: var(--game-board-size);
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: transform 800ms ease, rotate 800ms ease;
}

#game-area {
  transform: rotate(calc(var(--game-board-rotation) * -1)deg);
}

.player-knob {
  /* transform: rotate(90deg); */
}

.player-knob {
  position: absolute;
  border-radius: 50%;
  background-image: radial-gradient(transparent 40%, #000000ab);
  color: white;
  width: var(--player-knob-size);
  height: var(--player-knob-size);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1vmin;
  padding-top: 2%;
  opacity: 0;
  scale: 1.1;
  z-index: 2;
  box-shadow: 0 0 1rem rgba(0, 0, 0, 0.304);
  transition: opacity 300ms ease, transform 800ms ease, translate 800ms ease, rotate 800ms ease, outline 400ms ease;
}

.player-knob.showing {
  opacity: 1;
  scale: 1;
}

.player-knob.selected {
  outline: 1vmin solid rgb(1, 123, 1);
  animation: pulse 600ms ease alternate infinite;
}

.player-knob > .player-name {
  font-weight: bold;
  font-size: 2.5vmin;
  font-size: calc(var(--die-size) * 0.2);
  text-shadow: 0 0 0.2rem rgba(0, 0, 0, 0.6);
}

.player-knob > .player-score, .player-knob > .player-turn-score {
  font-weight: bold;
  font-size: 3vmin;
  text-shadow: 0 0 0.2rem rgba(0, 0, 0, 0.6);
}

.player-knob > .player-turn-score {
  color: green;
  flex: 0.5;
  display: flex;
  align-items: center;
}

.player-knob > .button-area {
  display: flex;
  justify-content: space-between;
  gap: 5%;
  height: 20%;
  width: 80%;
  pointer-events: none;
  opacity: 0.35;
  color: #aaa;
}

.button-area.available > button {
  background-color: rgb(187, 255, 187);
}

.button-area.available {
  pointer-events: all;
  opacity: 1;
  color: #000;
}

.player-knob > .button-area button {
  border-radius: 0.5rem;
  font-size: 2vmin;
  width: 50%;
}

#round-status {
  position: absolute;
  width: var(--game-board-size);
  height: var(--game-board-size);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 2vmin;
}

#round-status {
  font-size: 3vmin;
}

#center-die {
  transform: none;
  transition: transform 400ms ease;
}

#roll-display {
  opacity: 0;
  transition: opacity 200ms ease;
  z-index: 1;
  pointer-events: none;
}

#roll-display.showing {
  opacity: 1;
}

#roll-display > #center-die {
  transform: scale(0.25) rotate(180deg);
}

#roll-display.showing > #center-die {
  transform: none;
}

.die {
  width: var(--die-size);
  height: var(--die-size);
  background-color: #aaa;
  border-radius: 2.5vmin;
  display: grid;
  text-align: center;
  grid-template-rows: 1fr 1fr 1fr;
  grid-template-columns: 1fr 1fr 1fr;
  padding: 7%;
}

.die.flashing {
  animation: flash 60ms ease alternate backwards 12;
}

.die-dot {
  display: flex;
  align-self: center;
  justify-self: center;
  background-color: black;
  border-radius: 50%;
  width: var(--die-dot-size);
  height: var(--die-dot-size);
  opacity: 0;
}

.die-dot.visible {
  opacity: 1;
}

#new-game-form {
  position: absolute;
  width: 70%;
  background-color: gray;
  border-radius: 2.5vmin;
  scale: 0.8;
  padding: 2vmin;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  gap: 0.5rem;
  font-size: 1.5rem;
  pointer-events: none;
}

#new-game-form .player-color-input {
  width: 30%;
  height: 3.5rem;
  padding: 0.25rem;
}

#new-game-form input {
  height: 100%;
  font-size: 1.5rem;
  text-align: right;
  border-radius: inherit;
  padding-right: 0.5rem;
}

#new-game-button, #new-game-form {
  opacity: 0;
  transition: opacity 200ms ease, scale 200ms ease;
  pointer-events: none;
}

#new-game-form.showing, #new-game-button.showing {
  opacity: 1;
  scale: 1;
  pointer-events: unset;
}

#new-game-form > .input-row {
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 5rem;
  background-color: #00000022;
  border-radius: 1vmin;
  padding: 2vmin;
}

#new-game-form p {
  font-size: 1rem;
  width: max-content;
}

.input-row > select {
  font-size: 1rem;
  padding: 1rem;
  border-radius: inherit;
}

.input-row input {
  width: 50%;
}

.modal {
  position: absolute;
  top: 50vh;
  left: 50vw;
  min-width: calc(var(--game-board-size) * 0.5);
  min-height: calc(var(--game-board-size) * 0.35);
  border-radius: 2rem;
  background-color:rgb(1, 123, 1);
  color: white;
  text-shadow: 0 0 0.2rem rgba(0, 0, 0, 0.6);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  translate: -50% -50%;
  padding: 3rem;
  border: 0.5rem solid rgba(255, 255, 255, 0.19);
  box-shadow: 0 0 1rem rgba(0, 0, 0, 0.304);
  opacity: 0;
  scale: 0.8;
  pointer-events: none;
  font-size: 3rem;
  z-index: 5;
  transition: opacity 300ms ease, scale 300ms ease;
}

.modal > button {
 position: unset;
 margin-top: calc(var(--game-board-size) * 0.05);
}

#win-modal.showing {
  opacity: 1;
  scale: 1;
  pointer-events: all;
}

#debug {
  font-size: 1rem;
  position: fixed;
  top: var(--header-height);
  right: 0;
  background: white;
  color: rgba(0, 0, 0, 0.5);
  padding: 1rem;
  display: flex;
  /* flex-direction: column; */
  justify-content: space-between;
  gap: 0.25rem;
  min-width: 20vmin;
  width: 100vw;
  display: none;
}

#debug > div {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;
}

#debug > div > p:last-of-type {
  color: #90e690;
}

@keyframes pulse {
  from {
    outline-width: 0.5rem;
  }
  to {
    outline-width: 1.25rem;
  }
}

@keyframes flash {
  from {
    background: #aaa;
    rotate: -2deg;
  }
  to {
    background: red;
    rotate: 2deg;
  }
}